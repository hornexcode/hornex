// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: hornex/match.proto

package hornex

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Round            string `protobuf:"bytes,2,opt,name=round,proto3" json:"round,omitempty"`
	Tournament       string `protobuf:"bytes,3,opt,name=tournament,proto3" json:"tournament,omitempty"`
	TeamA            string `protobuf:"bytes,4,opt,name=team_a,json=teamA,proto3" json:"team_a,omitempty"`
	TeamB            string `protobuf:"bytes,5,opt,name=team_b,json=teamB,proto3" json:"team_b,omitempty"`
	Status           string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	ChallongeMatchId string `protobuf:"bytes,7,opt,name=challonge_match_id,json=challongeMatchId,proto3" json:"challonge_match_id,omitempty"`
	RiotMatchCode    string `protobuf:"bytes,8,opt,name=riot_match_code,json=riotMatchCode,proto3" json:"riot_match_code,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hornex_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_hornex_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_hornex_match_proto_rawDescGZIP(), []int{0}
}

func (x *Match) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Match) GetRound() string {
	if x != nil {
		return x.Round
	}
	return ""
}

func (x *Match) GetTournament() string {
	if x != nil {
		return x.Tournament
	}
	return ""
}

func (x *Match) GetTeamA() string {
	if x != nil {
		return x.TeamA
	}
	return ""
}

func (x *Match) GetTeamB() string {
	if x != nil {
		return x.TeamB
	}
	return ""
}

func (x *Match) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Match) GetChallongeMatchId() string {
	if x != nil {
		return x.ChallongeMatchId
	}
	return ""
}

func (x *Match) GetRiotMatchCode() string {
	if x != nil {
		return x.RiotMatchCode
	}
	return ""
}

type MatchRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MatchRetrieveRequest) Reset() {
	*x = MatchRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hornex_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRetrieveRequest) ProtoMessage() {}

func (x *MatchRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hornex_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRetrieveRequest.ProtoReflect.Descriptor instead.
func (*MatchRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_hornex_match_proto_rawDescGZIP(), []int{1}
}

func (x *MatchRetrieveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_hornex_match_proto protoreflect.FileDescriptor

var file_hornex_match_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x6f, 0x72, 0x6e, 0x65, 0x78, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x6f, 0x72, 0x6e, 0x65, 0x78, 0x22, 0xe9, 0x01, 0x0a,
	0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x41, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x62, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x72, 0x69, 0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x69, 0x6f, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x32, 0x49, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x1c, 0x2e, 0x68,
	0x6f, 0x72, 0x6e, 0x65, 0x78, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x68, 0x6f, 0x72,
	0x6e, 0x65, 0x78, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x68,
	0x6f, 0x72, 0x6e, 0x65, 0x78, 0x2e, 0x67, 0x67, 0x2f, 0x68, 0x6f, 0x72, 0x6e, 0x65, 0x78, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hornex_match_proto_rawDescOnce sync.Once
	file_hornex_match_proto_rawDescData = file_hornex_match_proto_rawDesc
)

func file_hornex_match_proto_rawDescGZIP() []byte {
	file_hornex_match_proto_rawDescOnce.Do(func() {
		file_hornex_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_hornex_match_proto_rawDescData)
	})
	return file_hornex_match_proto_rawDescData
}

var file_hornex_match_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_hornex_match_proto_goTypes = []interface{}{
	(*Match)(nil),                // 0: hornex.Match
	(*MatchRetrieveRequest)(nil), // 1: hornex.MatchRetrieveRequest
}
var file_hornex_match_proto_depIdxs = []int32{
	1, // 0: hornex.MatchService.Retrieve:input_type -> hornex.MatchRetrieveRequest
	0, // 1: hornex.MatchService.Retrieve:output_type -> hornex.Match
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hornex_match_proto_init() }
func file_hornex_match_proto_init() {
	if File_hornex_match_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hornex_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hornex_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hornex_match_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hornex_match_proto_goTypes,
		DependencyIndexes: file_hornex_match_proto_depIdxs,
		MessageInfos:      file_hornex_match_proto_msgTypes,
	}.Build()
	File_hornex_match_proto = out.File
	file_hornex_match_proto_rawDesc = nil
	file_hornex_match_proto_goTypes = nil
	file_hornex_match_proto_depIdxs = nil
}

# Generated by Django 4.2.7 on 2024-01-28 22:08

import uuid

from django.db import migrations, models

import apps.tournaments.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Checkin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Key",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("team_a_id", models.UUIDField()),
                ("team_b_id", models.UUIDField()),
                ("winner_id", models.UUIDField(blank=True, null=True)),
                ("loser_id", models.UUIDField(blank=True, null=True)),
                ("is_wo", models.BooleanField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("future", "Future"),
                            ("past", "Past"),
                            ("live", "Live"),
                        ],
                        default="future",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MatchRound",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("team_a_id", models.UUIDField()),
                ("team_b_id", models.UUIDField()),
                ("team_a_score", models.CharField(max_length=255)),
                ("team_b_score", models.CharField(max_length=255)),
                ("schedule", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Registration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("game_slug", models.CharField(max_length=255)),
                ("platform_slug", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Round",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("entry_fee", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("pending", "Pending"),
                            ("unpaid", "Unpaid"),
                            ("refunded", "Refunded"),
                            ("cancelled", "Cancelled"),
                            ("past_due", "Past Due"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "game",
                    models.CharField(
                        choices=[("league-of-legends", "League Of Legends")],
                        default="league-of-legends",
                        max_length=50,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[("pc", "Pc")], default="pc", max_length=50
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "phase",
                    models.CharField(
                        choices=[
                            ("registration_open", "Registration Open"),
                            ("results_tracking", "Results Tracking"),
                            ("payment_pending", "Payment Pending"),
                            ("finished_and_paid", "Finished And Paid"),
                        ],
                        default="registration_open",
                        max_length=50,
                    ),
                ),
                ("registration_start_date", models.DateTimeField()),
                ("registration_end_date", models.DateTimeField()),
                ("check_in_opens_at", models.DateTimeField(blank=True, null=True)),
                ("check_in_duration", models.IntegerField(blank=True, null=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("feature_image", models.CharField(blank=True, max_length=255)),
                (
                    "is_entry_free",
                    models.BooleanField(default=False, help_text="No entry fee"),
                ),
                ("entry_fee", models.IntegerField(blank=True, default=0, null=True)),
                ("prize_pool", models.IntegerField(blank=True, default=0, null=True)),
                ("max_teams", models.IntegerField(default=32)),
                (
                    "team_size",
                    models.IntegerField(
                        default=5,
                        validators=[apps.tournaments.validators.validate_team_size],
                    ),
                ),
                ("is_classification_open", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("challonge_tournament_id", models.IntegerField(blank=True, null=True)),
                (
                    "challonge_tournament_url",
                    models.URLField(blank=True, max_length=500),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]

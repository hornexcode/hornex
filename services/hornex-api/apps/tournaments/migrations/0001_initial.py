# Generated by Django 5.0.2 on 2024-02-27 17:55

import uuid

import django.db.models.deletion
from django.db import migrations, models

import apps.tournaments.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("teams", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LeagueOfLegendsLeague",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("IRON", "Iron"),
                            ("BRONZE", "Bronze"),
                            ("SILVER", "Silver"),
                            ("GOLD", "Gold"),
                            ("PLATINUM", "Platinum"),
                            ("EMERALD", "Emerald"),
                            ("DIAMOND", "Diamond"),
                            ("MASTER", "Master"),
                            ("GRANDMASTER", "Grandmaster"),
                            ("CHALLENGER", "Challenger"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "rank",
                    models.CharField(
                        choices=[
                            ("I", "I"),
                            ("II", "Ii"),
                            ("III", "Iii"),
                            ("IV", "Iv"),
                        ],
                        max_length=25,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["tier", "rank"],
            },
        ),
        migrations.CreateModel(
            name="LeagueOfLegendsProvider",
            fields=[
                (
                    "id",
                    models.IntegerField(editable=False, primary_key=True, serialize=False),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("BR", "Br"),
                            ("EUNE", "Eune"),
                            ("EUW", "Euw"),
                            ("JP", "Jp"),
                            ("KR", "Kr"),
                            ("LAN", "Lan"),
                            ("LAS", "Las"),
                            ("NA", "Na"),
                            ("OCE", "Oce"),
                            ("TR", "Tr"),
                            ("RU", "Ru"),
                        ],
                        default="BR",
                        max_length=10,
                    ),
                ),
                ("url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "game",
                    models.CharField(
                        choices=[("league-of-legends", "League Of Legends")],
                        default="league-of-legends",
                        max_length=50,
                    ),
                ),
                (
                    "platform",
                    models.CharField(choices=[("pc", "Pc")], default="pc", max_length=50),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("published", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("announced", "Announced"),
                            ("registering", "Registering"),
                            ("running", "Running"),
                            ("finished", "Finished"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="announced",
                        max_length=50,
                    ),
                ),
                ("registration_start_date", models.DateTimeField()),
                ("check_in_duration", models.IntegerField(blank=True, null=True)),
                ("start_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                ("feature_image", models.CharField(blank=True, max_length=255)),
                (
                    "is_entry_free",
                    models.BooleanField(default=False, help_text="No entry fee"),
                ),
                ("entry_fee", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "currency",
                    models.CharField(
                        choices=[("USD", "Usd"), ("BRL", "Brl"), ("EUR", "Eur")],
                        default="BRL",
                        max_length=3,
                    ),
                ),
                ("prize_pool_enabled", models.BooleanField(default=True)),
                ("max_teams", models.IntegerField(default=32)),
                (
                    "team_size",
                    models.IntegerField(
                        default=5,
                        validators=[apps.tournaments.validators.validate_team_size],
                    ),
                ),
                ("open_classification", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("challonge_tournament_id", models.IntegerField(blank=True, null=True)),
                (
                    "challonge_tournament_url",
                    models.URLField(blank=True, max_length=500),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("team_a_id", models.UUIDField()),
                ("team_b_id", models.UUIDField()),
                ("winner_id", models.UUIDField(blank=True, null=True)),
                ("loser_id", models.UUIDField(blank=True, null=True)),
                ("is_wo", models.BooleanField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("future", "Future"),
                            ("past", "Past"),
                            ("live", "Live"),
                        ],
                        default="future",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Participant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("team", models.CharField(max_length=255)),
                ("nickname", models.CharField(max_length=255, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Prize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("place", models.IntegerField()),
                ("content", models.TextField(default="")),
            ],
            options={
                "ordering": ["place"],
            },
        ),
        migrations.CreateModel(
            name="RegisteredTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("challonge_participant_id", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Registration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("game_slug", models.CharField(max_length=255)),
                ("platform_slug", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Checkin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "team",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="teams.team"),
                ),
            ],
        ),
    ]

# Generated by Django 4.2.7 on 2024-02-09 16:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tournaments", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("teams", "0002_initial"),
        ("games", "0002_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="tournament",
            name="organizer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="teams",
            field=models.ManyToManyField(blank=True, related_name="tournaments", to="teams.team"),
        ),
        migrations.AddField(
            model_name="registrationparticipants",
            name="participants",
            field=models.ManyToManyField(
                blank=True,
                related_name="tournaments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="registrationparticipants",
            name="registration",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="tournaments.registration",
            ),
        ),
        migrations.AddField(
            model_name="registration",
            name="team",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="teams.team"),
        ),
        migrations.AddField(
            model_name="registration",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="tournaments.tournament",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="tournaments.tournament",
            ),
        ),
        migrations.AddField(
            model_name="leagueoflegendssummoner",
            name="ello",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="tournaments.leagueoflegendsello",
            ),
        ),
        migrations.AddField(
            model_name="leagueoflegendssummoner",
            name="game_id",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.gameid"),
        ),
        migrations.AlterUniqueTogether(
            name="leagueoflegendsello",
            unique_together={("tier", "rank")},
        ),
        migrations.AddField(
            model_name="checkin",
            name="team",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="teams.team"),
        ),
        migrations.AddField(
            model_name="checkin",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="checkins",
                to="tournaments.tournament",
            ),
        ),
        migrations.AddField(
            model_name="checkin",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="leagueoflegendstournament",
            name="allowed_ellos",
            field=models.ManyToManyField(to="tournaments.leagueoflegendsello"),
        ),
        migrations.AddField(
            model_name="leagueoflegendstournament",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="tournaments.leagueoflegendsprovider",
            ),
        ),
    ]

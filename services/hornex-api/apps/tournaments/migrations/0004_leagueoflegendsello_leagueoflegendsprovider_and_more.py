# Generated by Django 4.2.7 on 2024-02-09 12:55

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("games", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tournaments", "0003_remove_tournament_check_in_opens_at"),
    ]

    operations = [
        migrations.CreateModel(
            name="LeagueOfLegendsEllo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("IRON", "Iron"),
                            ("BRONZE", "Bronze"),
                            ("SILVER", "Silver"),
                            ("GOLD", "Gold"),
                            ("PLATINUM", "Platinum"),
                            ("EMERALD", "Emerald"),
                            ("DIAMOND", "Diamond"),
                            ("MASTER", "Master"),
                            ("GRANDMASTER", "Grandmaster"),
                            ("CHALLENGER", "Challenger"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "rank",
                    models.CharField(
                        choices=[
                            ("I", "I"),
                            ("II", "Ii"),
                            ("III", "Iii"),
                            ("IV", "Iv"),
                        ],
                        max_length=25,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["tier", "rank"],
                "unique_together": {("tier", "rank")},
            },
        ),
        migrations.CreateModel(
            name="LeagueOfLegendsProvider",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("BR", "Br"),
                            ("EUNE", "Eune"),
                            ("EUW", "Euw"),
                            ("JP", "Jp"),
                            ("KR", "Kr"),
                            ("LAN", "Lan"),
                            ("LAS", "Las"),
                            ("NA", "Na"),
                            ("OCE", "Oce"),
                            ("TR", "Tr"),
                            ("RU", "Ru"),
                        ],
                        default="BR",
                        max_length=10,
                    ),
                ),
                ("url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="LeagueOfLegendsSummoner",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("puuid", models.CharField(max_length=255)),
                ("account_id", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ello",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.leagueoflegendsello",
                    ),
                ),
                (
                    "game_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="games.gameid"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeagueOfLegendsTournament",
            fields=[
                (
                    "tournament_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tournaments.tournament",
                    ),
                ),
                ("riot_id", models.IntegerField(blank=True, null=True)),
                (
                    "pick",
                    models.CharField(
                        choices=[
                            ("BLIND_PICK", "Blind Pick"),
                            ("DRAFT_MODE", "Draft Mode"),
                            ("ALL_RANDOM", "All Random"),
                            ("TOURNAMENT_DRAFT", "Tournament Draft"),
                        ],
                        default="BLIND_PICK",
                        max_length=50,
                    ),
                ),
                (
                    "map",
                    models.CharField(
                        choices=[
                            ("SUMMONERS_RIFT", "Summoners Rift"),
                            ("TWISTED_TREELINE", "Twisted Treeline"),
                            ("HOWLING_ABYSS", "Howling Abyss"),
                        ],
                        default="SUMMONERS_RIFT",
                        max_length=50,
                    ),
                ),
                (
                    "spectator",
                    models.CharField(
                        choices=[
                            ("NONE", "None"),
                            ("LOBBYONLY", "Lobbyonly"),
                            ("ALL", "All"),
                        ],
                        default="LOBBYONLY",
                        max_length=50,
                    ),
                ),
                ("riot_tournament_id", models.IntegerField(blank=True, null=True)),
                (
                    "allowed_ellos",
                    models.ManyToManyField(to="tournaments.leagueoflegendsello"),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="tournaments.leagueoflegendsprovider",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
            bases=("tournaments.tournament",),
        ),
        migrations.CreateModel(
            name="RegistrationParticipants",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="tournaments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "registration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.registration",
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="matchround",
            name="match",
        ),
        migrations.RemoveField(
            model_name="round",
            name="key",
        ),
        migrations.RemoveField(
            model_name="round",
            name="tournament",
        ),
        migrations.RemoveField(
            model_name="subscription",
            name="team",
        ),
        migrations.RemoveField(
            model_name="subscription",
            name="tournament",
        ),
        migrations.RemoveField(
            model_name="match",
            name="round",
        ),
        migrations.DeleteModel(
            name="Key",
        ),
        migrations.DeleteModel(
            name="MatchRound",
        ),
        migrations.DeleteModel(
            name="Round",
        ),
        migrations.DeleteModel(
            name="Subscription",
        ),
    ]

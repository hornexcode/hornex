// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: email_confirmation_code.sql

package db

import (
	"context"
)

const InsertEmailConfirmationCode = `-- name: InsertEmailConfirmationCode :one
INSERT INTO emails_confirmation_code (
  email,
  confirmation_code
)
VALUES (
  $1,
  $2
)
RETURNING id, email, confirmation_code, created_at
`

type InsertEmailConfirmationCodeParams struct {
	Email            string
	ConfirmationCode string
}

func (q *Queries) InsertEmailConfirmationCode(ctx context.Context, arg InsertEmailConfirmationCodeParams) (EmailsConfirmationCode, error) {
	row := q.db.QueryRow(ctx, InsertEmailConfirmationCode, arg.Email, arg.ConfirmationCode)
	var i EmailsConfirmationCode
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.ConfirmationCode,
		&i.CreatedAt,
	)
	return i, err
}

const SelectEmailConfirmationCode = `-- name: SelectEmailConfirmationCode :one
SELECT id, email, confirmation_code, created_at FROM emails_confirmation_code WHERE email = $1 ORDER BY created_at DESC
`

func (q *Queries) SelectEmailConfirmationCode(ctx context.Context, email string) (EmailsConfirmationCode, error) {
	row := q.db.QueryRow(ctx, SelectEmailConfirmationCode, email)
	var i EmailsConfirmationCode
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.ConfirmationCode,
		&i.CreatedAt,
	)
	return i, err
}

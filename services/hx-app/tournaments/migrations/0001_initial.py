# Generated by Django 4.2.5 on 2023-09-21 13:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tournaments.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("games", "0002_initial"),
        ("teams", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("platforms", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LeagueOfLegendsTournamentProvider",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("BR", "Br"),
                            ("EUNE", "Eune"),
                            ("EUW", "Euw"),
                            ("JP", "Jp"),
                            ("KR", "Kr"),
                            ("LAN", "Lan"),
                            ("LAS", "Las"),
                            ("NA", "Na"),
                            ("OCE", "Oce"),
                            ("TR", "Tr"),
                            ("RU", "Ru"),
                        ],
                        default="BR",
                        max_length=10,
                    ),
                ),
                ("url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                (
                    "description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_public", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("started", "Started"),
                            ("finished", "Finished"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="not_started",
                        max_length=50,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "is_entry_free",
                    models.BooleanField(default=False, help_text="No entry fee"),
                ),
                (
                    "is_prize_pool_fixed",
                    models.BooleanField(default=True, help_text="Fixed prize pool"),
                ),
                ("prize_pool", models.IntegerField(blank=True, default=0, null=True)),
                ("entry_fee", models.IntegerField(blank=True, default=0, null=True)),
                ("max_teams", models.IntegerField(default=0)),
                (
                    "team_size",
                    models.IntegerField(
                        default=1,
                        validators=[tournaments.models.Tournament.validate_team_size],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="games.game"
                    ),
                ),
                (
                    "organizer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="platforms.platform",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeagueOfLegendsTournament",
            fields=[
                (
                    "tournament_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tournaments.tournament",
                    ),
                ),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("IRON", "Iron"),
                            ("BRONZE", "Bronze"),
                            ("SILVER", "Silver"),
                            ("GOLD", "Gold"),
                            ("PLATINUM", "Platinum"),
                            ("DIAMOND", "Diamond"),
                            ("MASTER", "Master"),
                            ("GRANDMASTER", "Grandmaster"),
                            ("CHALLENGER", "Challenger"),
                        ],
                        default="IRON",
                        max_length=20,
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.leagueoflegendstournamentprovider",
                    ),
                ),
            ],
            bases=("tournaments.tournament",),
        ),
        migrations.CreateModel(
            name="TournamentTeam",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="teams.team"
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.tournament",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TournamentRegistration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="teams.team"
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.tournament",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="tournament",
            name="teams",
            field=models.ManyToManyField(
                related_name="tournaments",
                through="tournaments.TournamentTeam",
                to="teams.team",
            ),
        ),
        migrations.CreateModel(
            name="Bracket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("round", models.IntegerField(editable=False)),
                (
                    "loser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loser",
                        to="teams.team",
                    ),
                ),
                (
                    "team_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_a",
                        to="teams.team",
                    ),
                ),
                (
                    "team_b",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_b",
                        to="teams.team",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.tournament",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="winner",
                        to="teams.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeagueOfLegendsTournamentCode",
            fields=[
                (
                    "code",
                    models.CharField(
                        editable=False, max_length=30, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "users",
                    models.ManyToManyField(
                        related_name="tournament_codes", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournaments.leagueoflegendstournament",
                    ),
                ),
            ],
        ),
    ]

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: game.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const SelectGameById = `-- name: SelectGameById :one
SELECT id, name, slug FROM games WHERE id = $1
`

func (q *Queries) SelectGameById(ctx context.Context, id uuid.UUID) (Games, error) {
	row := q.db.QueryRow(ctx, SelectGameById, id)
	var i Games
	err := row.Scan(&i.ID, &i.Name, &i.Slug)
	return i, err
}

const SelectGames = `-- name: SelectGames :many
SELECT id, name, slug FROM games
`

func (q *Queries) SelectGames(ctx context.Context) ([]Games, error) {
	rows, err := q.db.Query(ctx, SelectGames)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Games{}
	for rows.Next() {
		var i Games
		if err := rows.Scan(&i.ID, &i.Name, &i.Slug); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
